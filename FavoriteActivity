package com.myproject.bvdictionary;

import android.content.Intent;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.WindowManager;
import android.widget.EditText;

import com.myproject.bvdictionary.adapter.HistoryAdapter;
import com.myproject.bvdictionary.database.Database;
import com.myproject.bvdictionary.model.WordBO;

import org.androidannotations.annotations.AfterViews;
import org.androidannotations.annotations.Bean;
import org.androidannotations.annotations.Click;
import org.androidannotations.annotations.EActivity;
import org.androidannotations.annotations.OnActivityResult;
import org.androidannotations.annotations.ViewById;

import java.util.List;

@SuppressWarnings("ConstantConditions")
@EActivity(R.layout.activity_favorite)
public class FavoriteActivity extends BaseActivity implements HistoryAdapter.IHistoryAdapterCallback {

    public static final int REQUEST_CODE = 100;
    @Bean
    HistoryAdapter mAdapter;

    @ViewById(R.id.rvFavorite)
    RecyclerView mRvFavorite;

    @ViewById(R.id.edtSearch)
    EditText mEdtSearch;

    private List<WordBO> mWordBOs;
    private Database mDatabase;

    @AfterViews
    public void init() {
        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
        displayActionBar(getResources().getString(R.string.title_favorite));
        getData();
        setAdapter();
        addTextChangeForEdtSearch();
    }

    private void setAdapter() {
        mRvFavorite.setLayoutManager(new LinearLayoutManager(this));
        mAdapter.setData(mWordBOs, this);
        mRvFavorite.setAdapter(mAdapter);
    }

    private void getData() {
        mDatabase = new Database(this);
        mWordBOs = mDatabase.getFavorite();
    }

    @Click(R.id.imgClear)
    void clearListener() {
        mEdtSearch.setText("");
    }

    @Override
    public void onItemRecycleViewListener(WordBO wordBO) {
        mDatabase.insertIntoHistoryTable(wordBO);
        WordDetailActivity_.intent(this)
                .extra("WORD_BO", wordBO)
                .startForResult(REQUEST_CODE);
    }

    @OnActivityResult(REQUEST_CODE)
    void onResult(Intent data) {
        if (null != data) {
            WordBO wordBO = data.getExtras().getParcelable("WORD_BO");
            if (!wordBO.isFavorite()){
                wordBO.setFavorite(true);
                mWordBOs.remove(wordBO);
                mAdapter.notifyDataSetChanged();
            }
        }
    }

    @Override
    public void onFavoriteItemListener(WordBO wordBO) {
        if (mWordBOs.contains(wordBO)) {
            if (mDatabase.updateFavorite(wordBO.getId(), !wordBO.isFavorite()) > 0) {
                mWordBOs.remove(wordBO);
                mAdapter.notifyDataSetChanged();
            }
        }
    }

    public void addTextChangeForEdtSearch() {
        mEdtSearch.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence arg0, int arg1, int arg2,
                                      int arg3) {
                // TODO Auto-generated method stub
                String inputData = mEdtSearch.getText().toString().toLowerCase()
                        .trim();
                mAdapter.getFilter().filter(inputData);
                mAdapter.notifyDataSetChanged();
            }

            @Override
            public void beforeTextChanged(CharSequence arg0, int arg1,
                                          int arg2, int arg3) {
                // TODO Auto-generated method stub

            }

            @Override
            public void afterTextChanged(Editable arg0) {

            }
        });
    }
}
